package Zadanie1;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.JOptionPane;

/**
 *
 * @author Kamil Zemczak
 */
public class CzestoscZnakow extends javax.swing.JFrame {    
    private Map<Character, Integer> statystyka = new TreeMap<>(); 
   
    /**
     * Creates new form CzestoscZnakowGUI
     */
    public CzestoscZnakow() {
        initComponents();
        Toolkit kit = Toolkit.getDefaultToolkit();
        Dimension rozmEkranu = kit.getScreenSize();
        setLocation(((rozmEkranu.width/2)-200), ((rozmEkranu.height/2)-140));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        wyborPliku = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        obszarTekstowy = new javax.swing.JTextArea();
        otworzPlik = new javax.swing.JButton();
        analizuj = new javax.swing.JButton();
        exit = new javax.swing.JButton();

        wyborPliku.setMinimumSize(new java.awt.Dimension(600, 400));
        wyborPliku.setPreferredSize(new java.awt.Dimension(600, 400));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        obszarTekstowy.setColumns(20);
        obszarTekstowy.setFont(new java.awt.Font("Calibri", 0, 14)); 
        obszarTekstowy.setLineWrap(true);
        obszarTekstowy.setRows(5);
        jScrollPane1.setViewportView(obszarTekstowy);

        otworzPlik.setText("Otwórz");
        otworzPlik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otworzPlikActionPerformed(evt);
            }
        });

        analizuj.setText("Zakończ");
        analizuj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analizujActionPerformed(evt);
            }
        });

        exit.setText("Zanalizuj tekst");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wyjdzActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(otworzPlik)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 243, Short.MAX_VALUE)
                        .addComponent(analizuj)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(otworzPlik)
                    .addComponent(analizuj)
                    .addComponent(exit))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String czytajPlik(File file){
        String zawartosc = "";
        String linia;
        try {
            BufferedReader buffReader = new BufferedReader(new FileReader(file));
            
            while((linia = buffReader.readLine()) != null){
                zawartosc += linia;
                zawartosc += System.lineSeparator();
            }
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(rootPane, "Nie odnaleziono pliku.");
        } catch(IOException ex) {
            JOptionPane.showMessageDialog(rootPane, "Błąd odczytu pliku.");
        }
        
        return zawartosc;
    }
    
    private void otworzPlikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileActionPerformed
        try {
            wyborPliku.showOpenDialog(this);
            File plik = wyborPliku.getSelectedFile();
            obszarTekstowy.setText(czytajPlik(plik));
        } catch(Exception e){
        }
    }//GEN-LAST:event_openFileActionPerformed

    private void analizujTekst(){
        String tekst = obszarTekstowy.getText().toLowerCase();
        char zmienna;
        
        for(int i = 0; i < tekst.length(); i++){
            zmienna = tekst.charAt(i);
            if(zmienna != 10 && zmienna != 13)
                if(!statystyka.containsKey(zmienna))
                    statystyka.put(zmienna, 1);
                else
                    statystyka.put(zmienna, statystyka.get(zmienna)+1);
        }
    }
    
    private void pokazRezultat(){
        String rezultat = "";
        
        for(Map.Entry<Character, Integer> entry:statystyka.entrySet()){
            rezultat += "'" + entry.getKey() + "' -> ";
            rezultat += entry.getValue();
            rezultat += System.lineSeparator();
        }
        
        JOptionPane.showMessageDialog(rootPane, rezultat);
    }
    
    private void analizujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analyseActionPerformed
        this.dispose();
    }//GEN-LAST:event_analyseActionPerformed

    private void wyjdzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        analizujTekst();
        pokazRezultat();
    }//GEN-LAST:event_exitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CzestoscZnakow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CzestoscZnakow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CzestoscZnakow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CzestoscZnakow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CzestoscZnakow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton analizuj;
    private javax.swing.JButton exit;
    private javax.swing.JFileChooser wyborPliku;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton otworzPlik;
    private javax.swing.JTextArea obszarTekstowy;
    // End of variables declaration//GEN-END:variables
}
